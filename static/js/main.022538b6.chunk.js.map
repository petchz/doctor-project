{"version":3,"sources":["js/setAuth.js","js/userLogout.js","components/Login.js","components/Register.js","components/Lobby.js","components/Whiteboard.js","components/Admin.js","components/Referee.js","route.js","serviceWorker.js","index.js"],"names":["setAuth","token","axios","defaults","headers","common","userLogout","localStorage","removeItem","this","setState","loading","window","location","href","API","Login","props","login","e","preventDefault","console","log","post","state","then","res","data","setItem","checkLogin","catch","err","wrong","register","username","name","university","newUser","password","document","title","accessToken","get","team_name","id","className","Header","as","icon","Icon","Subheader","Segment","placeholder","Grid","relaxed","stackable","Column","Form","onSubmit","Input","iconPosition","label","value","readOnly","type","onChange","target","Button","content","disabled","primary","Divider","onClick","color","error","Message","onDismiss","header","Component","logout","bind","handleX2","prevState","x2","handleX3","x3","Ready","round","columns","verticalAlign","vertical","size","Submit","Prepare","style","boxShadow","route","basename","process","exact","path","component","Register","Lobby","Whiteboard","Admin","Ref","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.022538b6.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default function setAuth(token) {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}","export default function userLogout() {\n    localStorage.removeItem(\"accessToken\");\n    this.setState({ loading: true });\n    window.location.href = \"/\";\n}","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Form,\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Message,\n  Divider\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nimport \"../style/App.css\";\nimport setAuth from \"../js/setAuth\";\nimport userLogout from \"../js/userLogout\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n      university: \"\",\n      loading: false,\n      wrong: false,\n      newUser: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM 2020\";\n    // check if user already logged in\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    }\n  }\n\n  login = e => {\n    e.preventDefault();\n    console.log(\"entering login state.\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/login\", this.state)\n      .then(res => {\n        // store Token on local\n        const token = res.data.token;\n        localStorage.setItem(\"accessToken\", token);\n        setAuth(token);\n        this.setState({ loading: false });\n        // console.log(jwtDecode(localStorage.accessToken));\n        this.checkLogin();\n      })\n      .catch(err => {\n        this.setState({ \n          loading: false,\n          wrong: true});\n      });\n  };\n\n  register = e => {\n    e.preventDefault();\n    console.log(\"registering\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/register?team=\" + this.state.username, {\n        name: this.state.name,\n        university: this.state.university\n      })\n      .then(res => {\n        console.log(res)\n        this.setState({ \n          newUser: false,\n          loading: false });\n      })\n      .catch(err => {\n        console.log(\"register error!\");\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      if (res.data.team_name === \"\" && res.data.university === \"\") {\n        this.setState({\n          username: res.data.id,\n          loading: false,\n          newUser: true\n        });\n      } else {\n        window.location.href = \"/lobby\";\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.newUser ? (\n            <header className=\"App-header\">\n              <div className=\"header\">\n                <Header as=\"h1\" icon className=\"white-txt\">\n                  <Icon name=\"pencil alternate\" />\n                  REGISTER\n                  <Header.Subheader className=\"white-txt\">\n                    Edit your information\n                  </Header.Subheader>\n                </Header>\n              </div>\n\n              <Segment placeholder>\n                <Grid relaxed=\"very\" stackable>\n                  <Grid.Column>\n                    <Form onSubmit={this.register} loading={this.state.loading}>\n                      <Form.Input\n                        icon=\"user md\"\n                        iconPosition=\"left\"\n                        label=\"Username\"\n                        value={this.state.username}\n                        readOnly\n                      />\n                      <Form.Input\n                        type=\"text\"\n                        icon=\"edit\"\n                        iconPosition=\"left\"\n                        label=\"Team name\"\n                        placeholder=\"Team name\"\n                        value={this.state.name}\n                        onChange={e => this.setState({ name: e.target.value })}\n                      />\n                      <Form.Input\n                        type=\"text\"\n                        icon=\"building\"\n                        iconPosition=\"left\"\n                        label=\"University\"\n                        placeholder=\"University\"\n                        value={this.state.university}\n                        onChange={e =>\n                          this.setState({ university: e.target.value })\n                        }\n                      />\n                      <Button\n                        type=\"submit\"\n                        content=\"Continue\"\n                        disabled={this.state.loading}\n                        primary\n                      />\n                      <Divider />\n                      <Button\n                        type=\"submit\"\n                        content=\"Sign out\"\n                        disabled={this.state.loading}\n                        onClick={userLogout}\n                        color=\"red\"\n                      />\n                    </Form>\n                  </Grid.Column>\n                </Grid>\n              </Segment>\n            </header>\n        ) : (\n          <header id=\"login\" className=\"App-header\">\n            <div>\n              <Header as=\"h1\" icon className=\"white-txt\">\n                <Icon name=\"heartbeat\" />\n                ICEM 2020\n                <Header.Subheader className=\"white-txt\">\n                  Sign in to start your challenge\n                </Header.Subheader>\n              </Header>\n            </div>\n\n            <Form error={this.state.wrong}>\n              <Message\n                error\n                onDismiss={e => this.setState({ wrong: false })}\n                header=\"Please try again!\"\n                content=\"Invalid Username or Password\"\n              />\n            </Form>\n\n            <Segment placeholder>\n              <Grid relaxed=\"very\" stackable>\n                <Grid.Column>\n                  <Form\n                    error\n                    onSubmit={this.login}\n                    loading={this.state.loading}\n                  >\n                    <Form.Input\n                      type=\"text\"\n                      icon=\"user md\"\n                      iconPosition=\"left\"\n                      label=\"Username\"\n                      placeholder=\"Username\"\n                      value={this.state.username}\n                      onChange={e =>\n                        this.setState({ username: e.target.value })\n                      }\n                    />\n                    <Form.Input\n                      type=\"password\"\n                      icon=\"lock\"\n                      iconPosition=\"left\"\n                      label=\"Password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={e =>\n                        this.setState({ password: e.target.value })\n                      }\n                    />\n                    <Button\n                      type=\"submit\"\n                      content=\"Sign in\"\n                      disabled={this.state.loading}\n                      color=\"green\"\n                    />\n                  </Form>\n                </Grid.Column>\n              </Grid>\n            </Segment>\n          </header>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Form,\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Divider\n} from \"semantic-ui-react\";\nimport \"../style/App.css\";\nimport axios from \"axios\";\nimport setAuth from \"../js/setAuth\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      name: \"\",\n      university: \"\",\n      loading: false\n    };\n    this.checkLogin = this.checkLogin.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM2020 - Register\";\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    }\n  }\n\n  login = e => {\n    e.preventDefault();\n    console.log(\"entering login state.\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/login\", this.state)\n      .then(res => {\n        // store Token on local\n        const token = res.data.token \n        localStorage.setItem('accessToken', token);\n        setAuth(token);\n        this.setState({ loading: false })\n        // console.log(jwtDecode(localStorage.accessToken));\n        this.checkLogin();\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n        this.setState({ wrong: true });\n      });\n  };\n\n  // register function for first time login user\n  register = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    console.log(\"registering\");\n    axios\n      .post(API + \"/register?team=\" + this.state.username, {\n        name: this.state.name,\n        university: this.state.university\n      })\n      .then(res => {\n        window.location.href = \"/lobby\"\n      })\n      .catch(err => {\n        console.log(\"register error!\");\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios\n      .get(API + \"/users/profile\")\n      .then(res => {\n        console.log(res);\n        this.setState({ username: res.data.id });\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(\"New user detected!\");\n      });\n  }\n\n  logout = e => {\n    localStorage.removeItem(\"accessToken\");\n    this.setState({ loading: true });\n    window.location.href = \"/\";\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"pencil alternate\" />\n              REGISTER\n              <Header.Subheader className=\"white-txt\">\n                Edit your information\n              </Header.Subheader>\n            </Header>\n          </div>\n\n          <Segment placeholder>\n            <Grid relaxed=\"very\" stackable>\n              <Grid.Column>\n                <Form onSubmit={this.register} loading={this.state.loading}>\n                  <Form.Input\n                    icon=\"user md\"\n                    iconPosition=\"left\"\n                    label=\"Username\"\n                    value={this.state.username}\n                    readOnly\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    icon=\"edit\"\n                    iconPosition=\"left\"\n                    label=\"Team name\"\n                    placeholder=\"Team name\"\n                    value={this.state.name}\n                    onChange={e => this.setState({ name: e.target.value })}\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    icon=\"building\"\n                    iconPosition=\"left\"\n                    label=\"University\"\n                    placeholder=\"University\"\n                    value={this.state.university}\n                    onChange={e =>\n                      this.setState({ university: e.target.value })\n                    }\n                  />\n                  <Button\n                    type=\"submit\"\n                    content=\"Continue\"\n                    disabled={this.state.loading}\n                    primary\n                  />\n                  <Divider />\n                  <Button\n                    type=\"submit\"\n                    content=\"Sign out\"\n                    disabled={this.state.loading}\n                    onClick={this.logout}\n                    color=\"red\"\n                  />\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </Segment>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Segment,\n  Grid,\n  Divider,\n  Header,\n  Icon\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nimport \"../style/App.css\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      team_name: \"\",\n      university: \"\",\n      x2: false,\n      x3: false,\n      loading: false,\n      round: \"\"\n    };\n  }\n  s;\n\n  componentDidMount() {\n    document.title = \"ICEM 2020 - Lobby\";\n    // check if user already logged in\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    } else {\n      console.log(\"Token not found!\")\n      window.location.href = \"/\"\n    }\n  }\n\n  handleX2 = e => {\n    this.setState(prevState => ({ x2: !prevState.x2 }));\n  };\n\n  handleX3 = e => {\n    this.setState(prevState => ({ x3: !prevState.x3 }));\n  };\n\n  Ready = e => {\n    this.setState({ loading: true });\n    // axios.post(API + \"\", this.state);\n    // window.location.href = \"/Whiteboard\";\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      this.setState({\n        username: res.data.id,\n        team_name: res.data.team_name,\n        university: res.data.university,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"heartbeat\" />\n                ROUND\n              <Header.Subheader className=\"white-txt\">\n                {this.state.university + \" @ ICEM 2020\"}\n              </Header.Subheader>\n            </Header>\n          </div>\n          <Segment\n            placeholder\n            className=\"lobby-size\"\n            loading={this.state.loading}\n          >\n            <Grid columns={2} relaxed=\"very\" stackable>\n              <Grid.Column>\n                <Header icon>\n                  X2\n                  <Icon\n                    disabled={this.state.x3}\n                    onClick={this.handleX2}\n                    name={this.state.x2 ? \"toggle on\" : \"toggle off\"}\n                    color={this.state.x2 ? \"green\" : \"black\"}\n                  />\n                  {this.state.x2 ? \"Enable\" : \"Disable\"}\n                  {/* <Button\n                    color=\"red\"\n                    toggle\n                    disabled={this.state.x3}\n                    active={this.state.x2}\n                    onClick={this.handleX2}\n                    content={this.state.x2 ? \"Enable\" : \"Disable\"}\n                    size=\"massive\"\n                  /> */}\n                </Header>\n              </Grid.Column>\n\n              <Grid.Column verticalAlign=\"middle\">\n                <Header icon>\n                  X3\n                  <Icon\n                    disabled={this.state.x2}\n                    onClick={this.handleX3}\n                    name={this.state.x3 ? \"toggle on\" : \"toggle off\"}\n                    color={this.state.x3 ? \"green\" : \"black\"}\n                  />\n                  {this.state.x3 ? \"Enable\" : \"Disable\"}\n                  {/* <Button\n                    color=\"red\"\n                    toggle\n                    disabled={this.state.x2}\n                    active={this.state.x3}\n                    onClick={this.handleX3}\n                    content={this.state.x3 ? \"Enable\" : \"Disable\"}\n                    size=\"massive\"\n                  /> */}\n                </Header>\n              </Grid.Column>\n            </Grid>\n\n            <Divider vertical>Or</Divider>\n          </Segment>\n\n          <br></br>\n\n          <Button\n            color=\"green\"\n            size=\"massive\"\n            onClick={this.Submit}\n            disabled={this.state.loading}\n            content={this.state.loading ? \"Waiting...\" : \"Continue\"}\n          />\n          \n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Button } from \"semantic-ui-react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport axios from \"axios\";\n\nimport \"../style/App.css\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM 2020 - Whiteboard\";\n    // check if user already logged in\n    // if (localStorage.accessToken) {\n    //   this.checkLogin();\n    // } else {\n    //   console.log(\"Token not found!\");\n    //   window.location.href = \"/\";\n    // }\n  }\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      this.setState({\n        username: res.data.id,\n        team_name: res.data.team_name,\n        university: res.data.university,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              WHITEBOARD\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n\n          <CanvasDraw\n            className=\"whiteboard-size\"\n            style={{\n              boxShadow:\n                \"0 13px 27px -5px rgba(50, 50, 93, 0.25),    0 8px 16px -8px rgba(0, 0, 0, 0.3)\"\n            }} \n          />\n\n          <br></br>\n\n          <Button\n            color=\"green\"\n            size=\"massive\"\n            onClick={this.Submit}\n            disabled={this.state.loading}\n            content={this.state.loading ? \"Loading...\" : \"Submit\"}\n          />\n\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport \"../style/App.css\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"bug\" />\n              ADMIN\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport \"../style/App.css\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"stethoscope\" />\n                REFEREE\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Lobby from \"./components/Lobby\";\nimport Whiteboard from \"./components/Whiteboard\";\nimport Admin from \"./components/Admin\";\nimport Ref from \"./components/Referee\";\n\nexport default class route extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/Register\" component={Register} />\n          <Route path=\"/Lobby\" component={Lobby} />\n          <Route path=\"/Whiteboard\" component={Whiteboard} />\n\n          <Route path=\"/Admin\" component={Admin} />\n\n          <Route path=\"/Ref\" component={Ref} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Route from './route.js';\nimport * as serviceWorker from './serviceWorker';\nimport setAuth from \"./js/setAuth\";\n// import { Provider } from 'react-redux';\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <Route />\n//   </Provider>,\n//   rootElement \n// ) \n\nsetAuth(localStorage.accessToken);\n\nReactDOM.render(<Route/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}