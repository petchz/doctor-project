{"version":3,"sources":["js/setAuth.js","components/Login.js","components/Register.js","components/Lobby.js","components/Whiteboard.js","components/Admin.js","components/Referee.js","route.js","serviceWorker.js","index.js"],"names":["setAuth","token","axios","defaults","headers","common","API","Login","props","login","e","preventDefault","console","log","setState","loading","post","state","then","res","data","localStorage","setItem","checkLogin","catch","err","wrong","register","username","name","university","newUser","password","redirect","document","title","accessToken","this","get","team_name","id","removeItem","to","className","Header","as","icon","Icon","Subheader","Segment","placeholder","Grid","relaxed","stackable","Column","Form","onSubmit","Input","iconPosition","label","value","readOnly","type","onChange","target","Button","content","disabled","primary","Divider","onClick","userLogout","color","error","Message","onDismiss","header","Component","logout","bind","handleX2","prevState","x2","handleX3","x3","Ready","window","location","href","lobby","score","white_board","start_time","count_time","timeout","exam","round","getData","getScore","total_score","toUpperCase","columns","verticalAlign","vertical","size","Submit","Statistic","inverted","Label","Value","Prepare","brushRadius","lazyRadius","activeItem","style","height","Canvas","clear","undo","Referee","route","basename","process","exact","path","component","Register","Lobby","Whiteboard","Admin","Ref","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.191a9ef8.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default function setAuth(token) {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Form,\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Message,\n  Divider\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"../style/App.css\";\nimport setAuth from \"../js/setAuth\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n      university: \"\",\n      loading: false,\n      wrong: false,\n      newUser: false,\n      redirect: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM 2020\";\n    // check if user already logged in\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    }\n  }\n\n  login = e => {\n    e.preventDefault();\n    console.log(\"entering login state.\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/login\", this.state)\n      .then(res => {\n        // store Token on local\n        const token = res.data.token;\n        localStorage.setItem(\"accessToken\", token);\n        setAuth(token);\n        this.setState({ loading: false });\n        // console.log(jwtDecode(localStorage.accessToken));\n        this.checkLogin();\n      })\n      .catch(err => {\n        this.setState({\n          loading: false,\n          wrong: true\n        });\n      });\n  };\n\n  register = e => {\n    e.preventDefault();\n    console.log(\"registering\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/register?team=\" + this.state.username, {\n        name: this.state.name,\n        university: this.state.university\n      })\n      .then(res => {\n        console.log(res);\n        this.setState({\n          newUser: false,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(\"register error!\");\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      if (res.data.team_name === \"\" && res.data.university === \"\") {\n        this.setState({\n          username: res.data.id,\n          loading: false,\n          newUser: true\n        });\n      } else {\n        this.setState({ redirect: \"/lobby\" });\n      }\n    });\n  }\n\n  userLogout() {\n    localStorage.removeItem(\"accessToken\");\n}\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div className=\"App\">\n        {this.state.newUser ? (\n          <header className=\"App-header\">\n            <div className=\"header\">\n              <Header as=\"h1\" icon className=\"white-txt\">\n                <Icon name=\"pencil alternate\" />\n                REGISTER\n                <Header.Subheader className=\"white-txt\">\n                  Edit your information\n                </Header.Subheader>\n              </Header>\n            </div>\n\n            <Segment placeholder>\n              <Grid relaxed=\"very\" stackable>\n                <Grid.Column>\n                  <Form onSubmit={this.register} loading={this.state.loading}>\n                    <Form.Input\n                      icon=\"user md\"\n                      iconPosition=\"left\"\n                      label=\"Username\"\n                      value={this.state.username}\n                      readOnly\n                    />\n                    <Form.Input\n                      type=\"text\"\n                      icon=\"edit\"\n                      iconPosition=\"left\"\n                      label=\"Team name\"\n                      placeholder=\"Team name\"\n                      value={this.state.name}\n                      onChange={e => this.setState({ name: e.target.value })}\n                    />\n                    <Form.Input\n                      type=\"text\"\n                      icon=\"building\"\n                      iconPosition=\"left\"\n                      label=\"University\"\n                      placeholder=\"University\"\n                      value={this.state.university}\n                      onChange={e =>\n                        this.setState({ university: e.target.value })\n                      }\n                    />\n                    <Button\n                      type=\"submit\"\n                      content=\"Continue\"\n                      disabled={this.state.loading}\n                      primary\n                    />\n                    <Divider />\n                    <Button\n                      type=\"submit\"\n                      content=\"Sign out\"\n                      disabled={this.state.loading}\n                      onClick={this.userLogout}\n                      color=\"red\"\n                    />\n                  </Form>\n                </Grid.Column>\n              </Grid>\n            </Segment>\n          </header>\n        ) : (\n          <header id=\"login\" className=\"App-header\">\n            <div>\n              <Header as=\"h1\" icon className=\"white-txt\">\n                <Icon name=\"heartbeat\" />\n                ICEM 2020\n                <Header.Subheader className=\"white-txt\">\n                  Sign in to start your challenge\n                </Header.Subheader>\n              </Header>\n            </div>\n\n            <Form error={this.state.wrong}>\n              <Message\n                error\n                onDismiss={e => this.setState({ wrong: false })}\n                header=\"Please try again!\"\n                content=\"Invalid Username or Password\"\n              />\n            </Form>\n\n            <Segment placeholder>\n              <Grid relaxed=\"very\" stackable>\n                <Grid.Column>\n                  <Form\n                    error\n                    onSubmit={this.login}\n                    loading={this.state.loading}\n                  >\n                    <Form.Input\n                      type=\"text\"\n                      icon=\"user md\"\n                      iconPosition=\"left\"\n                      label=\"Username\"\n                      placeholder=\"Username\"\n                      value={this.state.username}\n                      onChange={e =>\n                        this.setState({ username: e.target.value })\n                      }\n                    />\n                    <Form.Input\n                      type=\"password\"\n                      icon=\"lock\"\n                      iconPosition=\"left\"\n                      label=\"Password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={e =>\n                        this.setState({ password: e.target.value })\n                      }\n                    />\n                    <Button\n                      type=\"submit\"\n                      content=\"Sign in\"\n                      disabled={this.state.loading}\n                      color=\"green\"\n                    />\n                  </Form>\n                </Grid.Column>\n              </Grid>\n            </Segment>\n\n            <Button\n              color=\"blue\"\n              onClick={e =>\n                this.setState({ redirect: \"/whiteboard\" })\n              }\n              disabled={this.state.loading}\n              content={this.state.loading ? \"Loading...\" : \"Whiteboard\"}\n            />\n          </header>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Segment,\n  Form,\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Divider\n} from \"semantic-ui-react\";\nimport \"../style/App.css\";\nimport axios from \"axios\";\nimport setAuth from \"../js/setAuth\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      name: \"\",\n      university: \"\",\n      loading: false\n    };\n    this.checkLogin = this.checkLogin.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM2020 - Register\";\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    }\n  }\n\n  login = e => {\n    e.preventDefault();\n    console.log(\"entering login state.\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/login\", this.state)\n      .then(res => {\n        // store Token on local\n        const token = res.data.token \n        localStorage.setItem('accessToken', token);\n        setAuth(token);\n        this.setState({ loading: false })\n        // console.log(jwtDecode(localStorage.accessToken));\n        this.checkLogin();\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n        this.setState({ wrong: true });\n      });\n  };\n\n  // register function for first time login user\n  register = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    console.log(\"registering\");\n    axios\n      .post(API + \"/register?team=\" + this.state.username, {\n        name: this.state.name,\n        university: this.state.university\n      })\n      .then(res => {\n        this.setState({ redirect: \"/lobby\"});\n      })\n      .catch(err => {\n        console.log(\"register error!\");\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios\n      .get(API + \"/users/profile\")\n      .then(res => {\n        console.log(res);\n        this.setState({ username: res.data.id });\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(\"New user detected!\");\n      });\n  }\n\n  logout = e => {\n    localStorage.removeItem(\"accessToken\");\n    this.setState({ loading: true });\n    this.setState({ redirect: \"/\"});\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"pencil alternate\" />\n              REGISTER\n              <Header.Subheader className=\"white-txt\">\n                Edit your information\n              </Header.Subheader>\n            </Header>\n          </div>\n\n          <Segment placeholder>\n            <Grid relaxed=\"very\" stackable>\n              <Grid.Column>\n                <Form onSubmit={this.register} loading={this.state.loading}>\n                  <Form.Input\n                    icon=\"user md\"\n                    iconPosition=\"left\"\n                    label=\"Username\"\n                    value={this.state.username}\n                    readOnly\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    icon=\"edit\"\n                    iconPosition=\"left\"\n                    label=\"Team name\"\n                    placeholder=\"Team name\"\n                    value={this.state.name}\n                    onChange={e => this.setState({ name: e.target.value })}\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    icon=\"building\"\n                    iconPosition=\"left\"\n                    label=\"University\"\n                    placeholder=\"University\"\n                    value={this.state.university}\n                    onChange={e =>\n                      this.setState({ university: e.target.value })\n                    }\n                  />\n                  <Button\n                    type=\"submit\"\n                    content=\"Continue\"\n                    disabled={this.state.loading}\n                    primary\n                  />\n                  <Divider />\n                  <Button\n                    type=\"submit\"\n                    content=\"Sign out\"\n                    disabled={this.state.loading}\n                    onClick={this.logout}\n                    color=\"red\"\n                  />\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </Segment>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Segment,\n  Grid,\n  Divider,\n  Header,\n  Icon,\n  Statistic\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nimport \"../style/App.css\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      team_name: \"\",\n      university: \"\",\n      x2: false,\n      x3: false,\n      loading: true,\n      lobby: false,\n      score: \"\",\n      white_board: \"\",\n      start_time: \"\",\n      count_time: \"\",\n      timeout: \"\",\n      exam: \"\",\n      round: \"\"\n    };\n  }\n  s;\n\n  componentDidMount() {\n    document.title = \"ICEM 2020 - Lobby\";\n    // check if user already logged in\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    } else {\n      console.log(\"Token not found!\");\n      window.location.href = \"/\";\n    }\n  }\n\n  handleX2 = e => {\n    this.setState(prevState => ({ x2: !prevState.x2 }));\n  };\n\n  handleX3 = e => {\n    this.setState(prevState => ({ x3: !prevState.x3 }));\n  };\n\n  Ready = e => {\n    this.setState({ loading: true });\n    window.location.href = \"/Whiteboard\";\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      console.log(\"user detected!\");\n      this.setState({\n        username: res.data.id,\n        team_name: res.data.team_name,\n        university: res.data.university\n      });\n      this.getData();\n    });\n  }\n\n  getData() {\n    this.setState({ loading: true });\n    axios\n      .get(API + \"/game/session/data\")\n      .then(res => {\n        console.log(res);\n        if (res.data.round === null) {\n          console.log(\"round not found!\");\n        } else if (res.data.white_board === \"true\" && res.data.round != null) {\n          this.setState({\n            lobby: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            white_board: res.data.white_board,\n            start_time: res.data.start_time,\n            count_time: res.data.count_time,\n            timeout: res.data.timeout,\n            exam: res.data.exam,\n            round: res.data.round,\n            loading: false\n          });\n          this.getScore();\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getScore() {\n    axios.get(API + \"/users/score/\" + this.state.round).then(res => {\n      this.setState({\n        score: res.data.total_score,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.loading ? (\n          <header className=\"App-header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              Waiting for session...\n            </Header>\n          </header>\n        ) : (\n          <div>\n            {this.state.lobby ? (\n              <header className=\"App-header\">\n                <div className=\"header\">\n                  <Header as=\"h1\" icon className=\"white-txt\">\n                    <Icon name=\"heartbeat\" />\n                    {this.state.round.toUpperCase() + \" ROUND\"}\n                    <Header.Subheader className=\"white-txt\">\n                      {this.state.university + \" @ ICEM 2020\"}\n                    </Header.Subheader>\n                    <Header.Subheader className=\"white-txt\">\n                      {\"Score: \" + this.state.score}\n                    </Header.Subheader>\n                  </Header>\n                </div>\n                <Segment\n                  placeholder\n                  className=\"lobby-size\"\n                  loading={this.state.loading}\n                >\n                  <Grid columns={2} relaxed=\"very\" stackable>\n                    <Grid.Column>\n                      <Header icon>\n                        X2\n                        <Icon\n                          disabled={this.state.x3}\n                          onClick={this.handleX2}\n                          name={this.state.x2 ? \"toggle on\" : \"toggle off\"}\n                          color={this.state.x2 ? \"green\" : \"black\"}\n                        />\n                        {this.state.x2 ? \"Enable\" : \"Disable\"}\n                      </Header>\n                    </Grid.Column>\n\n                    <Grid.Column verticalAlign=\"middle\">\n                      <Header icon>\n                        X3\n                        <Icon\n                          disabled={this.state.x2}\n                          onClick={this.handleX3}\n                          name={this.state.x3 ? \"toggle on\" : \"toggle off\"}\n                          color={this.state.x3 ? \"green\" : \"black\"}\n                        />\n                        {this.state.x3 ? \"Enable\" : \"Disable\"}\n                      </Header>\n                    </Grid.Column>\n                  </Grid>\n\n                  <Divider vertical>Or</Divider>\n                </Segment>\n\n                <br></br>\n\n                <Button\n                  color=\"green\"\n                  size=\"massive\"\n                  onClick={this.Submit}\n                  disabled={this.state.loading}\n                  content={this.state.loading ? \"Waiting...\" : \"Continue\"}\n                />\n              </header>\n            ) : (\n              <header className=\"App-header\">\n                <div className=\"header\">\n                  <Header as=\"h1\" icon className=\"white-txt\">\n                    <Icon name=\"heartbeat\" />\n                    ICEM 2020\n                    <Header.Subheader className=\"white-txt\">\n                      {\"University: \" + this.state.university}\n                    </Header.Subheader>\n                  </Header>\n                </div>\n                <Statistic inverted>\n                  <Statistic.Label color=\"white\">Score</Statistic.Label>\n                  <Statistic.Value color=\"red\">\n                    {this.state.score}\n                  </Statistic.Value>\n                </Statistic>\n              </header>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Button } from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport axios from \"axios\";\n\nimport DrawingBoard from \"react-drawing-board\";\n\nimport \"../style/App.css\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      brushRadius: 5,\n      lazyRadius: 0,\n      activeItem: \"black\"\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM 2020 - Whiteboard\";\n    // check if user already logged in\n    // if (localStorage.accessToken) {\n    //   this.checkLogin();\n    // } else {\n    //   console.log(\"Token not found!\");\n    //   this.setState({ redirect: \"/\"})\n    // }\n  }\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      this.setState({\n        username: res.data.id,\n        team_name: res.data.team_name,\n        university: res.data.university,\n        loading: false\n      });\n    });\n  }\n\n  submit() {}\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div id=\"header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              Time Left: 90 sec\n              <Header.Subheader className=\"white-txt\">\n                {this.state.university + \" @ ICEM 2020\"}\n              </Header.Subheader>\n            </Header>\n          </div>\n\n          <div >\n            <DrawingBoard style={{ height: 500}}/>\n            {/* <CanvasDraw\n              ref={canvasDraw => (this.Canvas = canvasDraw)}\n              className=\"whiteboard-size\"\n              lazyRadius={this.state.lazyRadius}\n              brushColor={this.state.activeColor}\n              brushRadius={this.state.brushRadius}\n            /> */}\n          </div>\n\n          <div id=\"footer\">\n            <Button\n              color=\"green\"\n              size=\"massive\"\n              onClick={this.Submit}\n              disabled={this.state.loading}\n              content={this.state.loading ? \"Loading...\" : \"Submit\"}\n            />\n            <Button\n              size=\"big\"\n              color=\"red\"\n              onClick={() => {\n                this.Canvas.clear();\n              }}\n            >\n              Clear\n            </Button>\n            <Button\n              size=\"big\"\n              color=\"blue\"\n              onClick={() => {\n                this.Canvas.undo();\n              }}\n            >\n              Undo\n            </Button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport \"../style/App.css\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"bug\" />\n              ADMIN\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport \"../style/App.css\";\n\nexport default class Referee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"stethoscope\" />\n                REFEREE\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Lobby from \"./components/Lobby\";\nimport Whiteboard from \"./components/Whiteboard\";\nimport Admin from \"./components/Admin\";\nimport Ref from \"./components/Referee\";\n\nexport default class route extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/Register\" component={Register} />\n          <Route path=\"/Lobby\" component={Lobby} />\n          <Route path=\"/Whiteboard\" component={Whiteboard} />\n\n          <Route path=\"/Admin\" component={Admin} />\n\n          <Route path=\"/Ref\" component={Ref} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Route from './route.js';\nimport * as serviceWorker from './serviceWorker';\nimport setAuth from \"./js/setAuth\";\n// import { Provider } from 'react-redux';\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <Route />\n//   </Provider>,\n//   rootElement \n// ) \n\nsetAuth(localStorage.accessToken);\n\nReactDOM.render(<Route/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}