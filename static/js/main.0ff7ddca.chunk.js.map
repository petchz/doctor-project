{"version":3,"sources":["js/setAuth.js","components/Login.js","components/Register.js","components/Lobby.js","components/Whiteboard.js","components/Admin.js","components/Referee.js","route.js","serviceWorker.js","index.js"],"names":["setAuth","token","axios","defaults","headers","common","API","Login","props","login","e","preventDefault","setState","loading","post","state","then","res","data","localStorage","setItem","checkLogin","catch","err","wrong","register","username","name","university","newUser","console","log","userLogout","removeItem","window","location","reload","password","redirect","document","title","accessToken","this","get","team_name","id","to","className","Header","as","icon","Icon","color","Subheader","Segment","placeholder","Grid","relaxed","stackable","Column","Form","onSubmit","Input","iconPosition","label","value","readOnly","required","type","onChange","target","Button","content","disabled","primary","onClick","error","Message","onDismiss","header","Component","logout","bind","Divider","handleX2","prevState","x2","handleX3","x3","Submit","lobby","score","white_board","start_time","count_time","timeout","exam","round","href","getData","getScore","total_score","toUpperCase","columns","verticalAlign","vertical","size","Statistic","inverted","Label","Value","Prepare","brushRadius","lazyRadius","floated","width","Canvas","clear","undo","horizontal","ref","canvasDraw","Referee","route","basename","process","exact","path","component","Register","Lobby","Whiteboard","Admin","Ref","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ff7ddca.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default function setAuth(token) {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Form,\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Message\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n// import jwtDecode from \"jwt-decode\";\n\nimport \"../style/App.css\";\nimport setAuth from \"../js/setAuth\";\n\nconst API = \"http://68.183.230.159:8081\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n      university: \"\",\n      loading: false,\n      wrong: false,\n      newUser: false,\n      redirect: \"\"\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM 2020\";\n    // check if user is already logged in\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    }\n  }\n\n  login = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/login\", this.state)\n      .then(res => {\n        // store Token on localstorage\n        const token = res.data.token;\n        localStorage.setItem(\"accessToken\", token);\n        setAuth(token);\n        this.setState({ loading: false });\n        // console.log(jwtDecode(localStorage.accessToken));\n        this.checkLogin();\n      })\n      .catch(err => {\n        this.setState({\n          loading: false,\n          wrong: true\n        });\n      });\n  };\n\n  register = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/register?team=\" + this.state.username, {\n        name: this.state.name,\n        university: this.state.university\n      })\n      .then(res => {\n        // console.log(res);\n        this.setState({\n          newUser: false,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  checkLogin() {\n    // console.log(\"Check for logged in.\");\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      if (res.data.team_name === \"\" && res.data.university === \"\") {\n        this.setState({\n          username: res.data.id,\n          loading: false,\n          newUser: true\n        });\n      } else {\n        this.setState({ redirect: \"/lobby\" });\n      }\n    });\n  }\n\n  userLogout = e => {\n    this.setState({ loading: true });\n    localStorage.removeItem(\"accessToken\");\n    window.location.reload(false);\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div className=\"App\">\n        {this.state.newUser ? (\n          <header className=\"App-header\">\n            <div className=\"header\">\n              <Header as=\"h1\" icon className=\"white-txt\">\n                <Icon name=\"pencil alternate\" color=\"teal\" />\n                REGISTER\n                <Header.Subheader className=\"white-txt\">\n                  Edit your information\n                </Header.Subheader>\n              </Header>\n            </div>\n\n            <Segment placeholder>\n              <Grid relaxed=\"very\" stackable>\n                <Grid.Column>\n                  <Form onSubmit={this.register} loading={this.state.loading}>\n                    <Form.Input\n                      icon=\"user md\"\n                      iconPosition=\"left\"\n                      label=\"Username\"\n                      value={this.state.username}\n                      readOnly\n                    />\n                    <Form.Input\n                      required\n                      type=\"text\"\n                      icon=\"edit\"\n                      iconPosition=\"left\"\n                      label=\"Team name\"\n                      placeholder=\"Team name\"\n                      value={this.state.name}\n                      onChange={e => this.setState({ name: e.target.value })}\n                    />\n                    <Form.Input\n                      required\n                      type=\"text\"\n                      icon=\"building\"\n                      iconPosition=\"left\"\n                      label=\"University\"\n                      placeholder=\"University\"\n                      value={this.state.university}\n                      onChange={e =>\n                        this.setState({ university: e.target.value })\n                      }\n                    />\n                    <Button\n                      type=\"submit\"\n                      content=\"Continue\"\n                      disabled={this.state.loading}\n                      primary\n                    />\n                  </Form>\n                </Grid.Column>\n              </Grid>\n            </Segment>\n            <Button\n              type=\"submit\"\n              content=\"Sign out\"\n              disabled={this.state.loading}\n              onClick={this.userLogout}\n              color=\"red\"\n            />\n          </header>\n        ) : (\n          <header id=\"login\" className=\"App-header\">\n            <div>\n              <Header as=\"h1\" icon className=\"white-txt\">\n                <Icon name=\"heartbeat\" color=\"teal\" />\n                ICEM 2020\n                <Header.Subheader className=\"white-txt\">\n                  Sign in to start your challenge\n                </Header.Subheader>\n              </Header>\n            </div>\n\n            <Form error={this.state.wrong}>\n              <Message\n                error\n                onDismiss={e => this.setState({ wrong: false })}\n                header=\"Please try again!\"\n                content=\"Invalid Username or Password\"\n              />\n            </Form>\n\n            <Segment placeholder>\n              <Grid relaxed=\"very\" stackable>\n                <Grid.Column>\n                  <Form\n                    error\n                    onSubmit={this.login}\n                    loading={this.state.loading}\n                  >\n                    <Form.Input\n                      type=\"text\"\n                      icon=\"user md\"\n                      iconPosition=\"left\"\n                      label=\"Username\"\n                      placeholder=\"Username\"\n                      value={this.state.username}\n                      onChange={e =>\n                        this.setState({ username: e.target.value })\n                      }\n                    />\n                    <Form.Input\n                      type=\"password\"\n                      icon=\"lock\"\n                      iconPosition=\"left\"\n                      label=\"Password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={e =>\n                        this.setState({ password: e.target.value })\n                      }\n                    />\n                    <Button\n                      type=\"submit\"\n                      content=\"Sign in\"\n                      disabled={this.state.loading}\n                      color=\"green\"\n                    />\n                  </Form>\n                </Grid.Column>\n              </Grid>\n            </Segment>\n\n            <Button\n              color=\"blue\"\n              onClick={e => this.setState({ redirect: \"/whiteboard\" })}\n              disabled={this.state.loading}\n              content={this.state.loading ? \"Loading...\" : \"Whiteboard\"}\n            />\n          </header>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Segment,\n  Form,\n  Grid,\n  Button,\n  Header,\n  Icon,\n  Divider\n} from \"semantic-ui-react\";\nimport \"../style/App.css\";\nimport axios from \"axios\";\nimport setAuth from \"../js/setAuth\";\n\nconst API = \"https://icem-2020.herokuapp.com\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      name: \"\",\n      university: \"\",\n      loading: false\n    };\n    this.checkLogin = this.checkLogin.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM2020 - Register\";\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    }\n  }\n\n  login = e => {\n    e.preventDefault();\n    console.log(\"entering login state.\");\n    this.setState({ loading: true });\n    axios\n      .post(API + \"/login\", this.state)\n      .then(res => {\n        // store Token on local\n        const token = res.data.token \n        localStorage.setItem('accessToken', token);\n        setAuth(token);\n        this.setState({ loading: false })\n        // console.log(jwtDecode(localStorage.accessToken));\n        this.checkLogin();\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n        this.setState({ wrong: true });\n      });\n  };\n\n  // register function for first time login user\n  register = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    console.log(\"registering\");\n    axios\n      .post(API + \"/register?team=\" + this.state.username, {\n        name: this.state.name,\n        university: this.state.university\n      })\n      .then(res => {\n        this.setState({ redirect: \"/lobby\"});\n      })\n      .catch(err => {\n        console.log(\"register error!\");\n        console.log(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios\n      .get(API + \"/users/profile\")\n      .then(res => {\n        console.log(res);\n        this.setState({ username: res.data.id });\n        this.setState({ loading: false });\n      })\n      .catch(err => {\n        console.log(\"New user detected!\");\n      });\n  }\n\n  logout = e => {\n    localStorage.removeItem(\"accessToken\");\n    this.setState({ loading: true });\n    this.setState({ redirect: \"/\"});\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"pencil alternate\" />\n              REGISTER\n              <Header.Subheader className=\"white-txt\">\n                Edit your information\n              </Header.Subheader>\n            </Header>\n          </div>\n\n          <Segment placeholder>\n            <Grid relaxed=\"very\" stackable>\n              <Grid.Column>\n                <Form onSubmit={this.register} loading={this.state.loading}>\n                  <Form.Input\n                    icon=\"user md\"\n                    iconPosition=\"left\"\n                    label=\"Username\"\n                    value={this.state.username}\n                    readOnly\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    icon=\"edit\"\n                    iconPosition=\"left\"\n                    label=\"Team name\"\n                    placeholder=\"Team name\"\n                    value={this.state.name}\n                    onChange={e => this.setState({ name: e.target.value })}\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    icon=\"building\"\n                    iconPosition=\"left\"\n                    label=\"University\"\n                    placeholder=\"University\"\n                    value={this.state.university}\n                    onChange={e =>\n                      this.setState({ university: e.target.value })\n                    }\n                  />\n                  <Button\n                    type=\"submit\"\n                    content=\"Continue\"\n                    disabled={this.state.loading}\n                    primary\n                  />\n                  <Divider />\n                  <Button\n                    type=\"submit\"\n                    content=\"Sign out\"\n                    disabled={this.state.loading}\n                    onClick={this.logout}\n                    color=\"red\"\n                  />\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </Segment>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Segment,\n  Grid,\n  Divider,\n  Header,\n  Icon,\n  Statistic\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"../style/App.css\";\n\nconst API = \"http://68.183.230.159:8081\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      team_name: \"\",\n      university: \"\",\n      x2: false,\n      x3: false,\n      loading: false,\n      lobby: false,\n      score: 0,\n      white_board: \"\",\n      start_time: \"\",\n      count_time: \"\",\n      timeout: \"\",\n      exam: \"\",\n      round: \"\",\n      redirect: \"\"\n    };\n  }\n  s;\n\n  componentDidMount() {\n    document.title = \"ICEM 2020 - Lobby\";\n    // check if user already logged in\n    if (localStorage.accessToken) {\n      this.checkLogin();\n    } else {\n      console.log(\"Token not found!\");\n      window.location.href = \"/\";\n    }\n  }\n\n  handleX2 = e => {\n    this.setState(prevState => ({ x2: !prevState.x2 }));\n  };\n\n  handleX3 = e => {\n    this.setState(prevState => ({ x3: !prevState.x3 }));\n  };\n\n  Submit = e => {\n    this.setState({ loading: true, redirect: \"/whiteboard\" });\n  };\n\n  checkLogin() {\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      this.setState({\n        username: res.data.id,\n        team_name: res.data.team_name,\n        university: res.data.university\n      });\n      this.getData();\n    });\n  }\n\n  // check for a game in session\n  getData() {\n    this.setState({ loading: true });\n    axios\n      .get(API + \"/game/session/data\")\n      .then(res => {\n        console.log(res);\n        if (res.data.round === null) {\n          this.setState({ loading: false });\n        } else if (res.data.white_board === \"true\" && res.data.round != null) {\n          this.setState({\n            lobby: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            white_board: res.data.white_board,\n            start_time: res.data.start_time,\n            count_time: res.data.count_time,\n            timeout: res.data.timeout,\n            exam: res.data.exam,\n            round: res.data.round,\n            loading: false\n          });\n          this.getScore();\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  getScore() {\n    axios.get(API + \"/users/score/\" + this.state.round).then(res => {\n      this.setState({\n        score: res.data.total_score,\n        loading: false\n      });\n    });\n  }\n\n  userLogout = e => {\n    this.setState({ loading: true });\n    localStorage.removeItem(\"accessToken\");\n    window.location.reload(false);\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div className=\"App\">\n        {this.state.loading ? (\n          <header className=\"App-header\">\n            <Header as=\"h1\" icon className=\"white-txt\">\n              Waiting for session...\n            </Header>\n            <Button\n              type=\"submit\"\n              content=\"Sign out\"\n              onClick={this.userLogout}\n              color=\"red\"\n            />\n          </header>\n        ) : (\n          <div>\n            {this.state.lobby ? (\n              <header className=\"App-header\">\n                <div className=\"header\">\n                  <Header as=\"h1\" icon className=\"white-txt\">\n                    <Icon name=\"heartbeat\" color=\"teal\" />\n                    {this.state.round.toUpperCase() + \" ROUND\"}\n                    <Header.Subheader className=\"white-txt\">\n                      {this.state.university + \" @ ICEM 2020\"}\n                    </Header.Subheader>\n                    <Header.Subheader className=\"white-txt\">\n                      {\"Score: \" + this.state.score}\n                    </Header.Subheader>\n                  </Header>\n                </div>\n                <Segment\n                  placeholder\n                  className=\"lobby-size\"\n                  loading={this.state.loading}\n                >\n                  <Grid columns={2} relaxed=\"very\" stackable>\n                    <Grid.Column>\n                      <Header icon>\n                        X2\n                        <Icon\n                          disabled={this.state.x3}\n                          onClick={this.handleX2}\n                          name={this.state.x2 ? \"toggle on\" : \"toggle off\"}\n                          color={this.state.x2 ? \"green\" : \"black\"}\n                        />\n                        {this.state.x2 ? \"Enable\" : \"Disable\"}\n                      </Header>\n                    </Grid.Column>\n\n                    <Grid.Column verticalAlign=\"middle\">\n                      <Header icon>\n                        X3\n                        <Icon\n                          disabled={this.state.x2}\n                          onClick={this.handleX3}\n                          name={this.state.x3 ? \"toggle on\" : \"toggle off\"}\n                          color={this.state.x3 ? \"green\" : \"black\"}\n                        />\n                        {this.state.x3 ? \"Enable\" : \"Disable\"}\n                      </Header>\n                    </Grid.Column>\n                  </Grid>\n\n                  <Divider vertical>Or</Divider>\n                </Segment>\n\n                <br></br>\n\n                <Button\n                  color=\"green\"\n                  size=\"massive\"\n                  onClick={this.Submit}\n                  disabled={this.state.loading}\n                  content={this.state.loading ? \"Waiting...\" : \"Continue\"}\n                />\n              </header>\n            ) : (\n              <header className=\"App-header\">\n                <div className=\"header\">\n                  <Header as=\"h1\" icon className=\"white-txt\">\n                    <Icon name=\"heartbeat\" color=\"teal\" />\n                    ICEM 2020\n                    <Header.Subheader className=\"white-txt\">\n                      {\"Team: \" + this.state.team_name}\n                    </Header.Subheader>\n                    <Header.Subheader className=\"white-txt\">\n                      {\"University: \" + this.state.university}\n                    </Header.Subheader>\n                  </Header>\n                </div>\n                <Statistic inverted color=\"red\">\n                  <Statistic.Label className=\"score-size\">\n                    Score\n                  </Statistic.Label>\n                  <Statistic.Value color=\"teal\">\n                    {this.state.score}\n                  </Statistic.Value>\n                </Statistic>\n              </header>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Button, Grid, Statistic } from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport axios from \"axios\";\n\nimport \"../style/App.css\";\n\nconst API = \"http://68.183.230.159:8081\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      brushRadius: 2.5,\n      lazyRadius: 0,\n      score: 0\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"ICEM 2020 - Whiteboard\";\n    // check if user already logged in\n    // if (localStorage.accessToken) {\n    //   this.checkLogin();\n    // } else {\n    //   console.log(\"Token not found!\");\n    //   this.setState({ redirect: \"/\"})\n    // }\n  }\n\n  checkLogin() {\n    console.log(\"Check for logged in.\");\n    this.setState({ loading: true });\n    axios.get(API + \"/users/profile\").then(res => {\n      // console.log(res);\n      this.setState({\n        username: res.data.id,\n        team_name: res.data.team_name,\n        university: res.data.university,\n        loading: false\n      });\n    });\n  }\n\n  submit() {}\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div id=\"header\" className=\"header-wb\">\n            <Grid className=\"header-wb\">\n              <Grid.Column floated=\"left\" width={5} className=\"center-vert\">\n              <Button\n                  content=\"Clear\"\n                  icon=\"remove\"\n                  floated=\"left\"\n                  size=\"big\"\n                  color=\"red\"\n                  onClick={() => {\n                    this.Canvas.clear();\n                  }}\n                />\n                <Button\n                  content=\"Undo\"\n                  icon=\"undo\"\n                  floated=\"left\"\n                  size=\"big\"\n                  color=\"blue\"\n                  onClick={() => {\n                    this.Canvas.undo();\n                  }}\n                />\n              </Grid.Column>\n              <Grid.Column width={5} className=\"text center-vert center\">\n                <Header as=\"h1\" icon className=\"white-txt header-wb\">\n                  Time Left: 90 sec\n                  <Header.Subheader className=\"white-txt score-size\">\n                    {\"Team: KKU\"}\n                  </Header.Subheader>\n                </Header>\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={5} className=\"center-vert\">\n              <Statistic inverted color=\"red\" horizontal floated=\"right\" >\n                  <Statistic.Value color=\"teal\">\n                    {this.state.score}\n                  </Statistic.Value>\n                  <Statistic.Label className=\"score-size\">\n                    Score \n                  </Statistic.Label>\n                </Statistic>\n              </Grid.Column>\n            </Grid>\n          </div>\n\n          <div className=\"whiteboard-size\">\n            <CanvasDraw\n              ref={canvasDraw => (this.Canvas = canvasDraw)}\n              className=\"whiteboard-size\"\n              lazyRadius={this.state.lazyRadius}\n              brushRadius={this.state.brushRadius}\n            />\n          </div>\n\n          <div id=\"footer\" className=\"footer-wb\">\n            <Grid className=\"footer-wb\">\n              <Grid.Column floated=\"left\" width={5}></Grid.Column>\n              <Grid.Column width={5} className=\"center\">\n                <Button\n                  color=\"green\"\n                  size=\"massive\"\n                  onClick={this.Submit}\n                  disabled={this.state.loading}\n                  content={this.state.loading ? \"Loading...\" : \"Submit\"}\n                />\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={5}></Grid.Column>\n            </Grid>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport \"../style/App.css\";\n\nexport default class Prepare extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"bug\" />\n              ADMIN\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport \"../style/App.css\";\n\nexport default class Referee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <Header as=\"h1\" icon className=\"white-txt\">\n              <Icon name=\"stethoscope\" />\n                REFEREE\n              <Header.Subheader className=\"white-txt\">\n                ICEM 2020\n              </Header.Subheader>\n            </Header>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Lobby from \"./components/Lobby\";\nimport Whiteboard from \"./components/Whiteboard\";\nimport Admin from \"./components/Admin\";\nimport Ref from \"./components/Referee\";\n\nexport default class route extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/Register\" component={Register} />\n          <Route path=\"/Lobby\" component={Lobby} />\n          <Route path=\"/Whiteboard\" component={Whiteboard} />\n\n          <Route path=\"/Admin\" component={Admin} />\n\n          <Route path=\"/Ref\" component={Ref} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Route from './route.js';\nimport * as serviceWorker from './serviceWorker';\nimport setAuth from \"./js/setAuth\";\n// import { Provider } from 'react-redux';\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <Route />\n//   </Provider>,\n//   rootElement \n// ) \n\nsetAuth(localStorage.accessToken);\n\nReactDOM.render(<Route/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}